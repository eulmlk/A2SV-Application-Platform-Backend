from abc import ABC, abstractmethod
from typing import List, Optional
from app.domain.entities import User, Role, ApplicationCycle, Application, Review
import uuid

class IUserRepository(ABC):
    @abstractmethod
    def get_by_email(self, email: str) -> Optional[User]: ...
    @abstractmethod
    def get_by_id(self, user_id: uuid.UUID) -> Optional[User]: ...
    @abstractmethod
    def create(self, user: User) -> User: ...
    @abstractmethod
    def list_all(self) -> List[User]: ...

class IRoleRepository(ABC):
    @abstractmethod
    def get_by_name(self, name: str) -> Optional[Role]: ...
    @abstractmethod
    def get_by_id(self, role_id: int) -> Optional[Role]: ...
    @abstractmethod
    def list_all(self) -> List[Role]: ...

class IApplicationCycleRepository(ABC):
    @abstractmethod
    def get_active(self) -> Optional[ApplicationCycle]: ...
    @abstractmethod
    def get_by_id(self, cycle_id: int) -> Optional[ApplicationCycle]: ...
    @abstractmethod
    def create(self, cycle: ApplicationCycle) -> ApplicationCycle: ...
    @abstractmethod
    def activate(self, cycle_id: int) -> ApplicationCycle: ...
    @abstractmethod
    def list_all(self) -> List[ApplicationCycle]: ...

class IApplicationRepository(ABC):
    @abstractmethod
    def get_by_id(self, application_id: uuid.UUID) -> Optional[Application]: ...
    @abstractmethod
    def get_by_applicant_id(self, applicant_id: uuid.UUID) -> Optional[Application]: ...
    @abstractmethod
    def create(self, application: Application) -> Application: ...
    @abstractmethod
    def list_by_reviewer(self, reviewer_id: uuid.UUID) -> List[Application]: ...
    @abstractmethod
    def list_by_status(self, status: str) -> List[Application]: ...
    @abstractmethod
    def assign_reviewer(self, application_id: uuid.UUID, reviewer_id: uuid.UUID) -> Application: ...
    @abstractmethod
    def finalize_decision(self, application_id: uuid.UUID, status: str, decision_notes: str) -> Application: ...
    @abstractmethod
    def list_all(self) -> List[Application]: ...

class IReviewRepository(ABC):
    @abstractmethod
    def get_by_application_id(self, application_id: uuid.UUID) -> Optional[Review]: ...
    @abstractmethod
    def create_or_update(self, review: Review) -> Review: ...
    @abstractmethod
    def list_by_reviewer(self, reviewer_id: uuid.UUID) -> List[Review]: ... 